[server]
; ip = 192.168.0.101
; port = 22
ip = 127.0.0.1
port = 2222
pid = /tmp/sfserver.pid
log = /home/stranger/development/my-projects/python/sfserver/sfserver.log
; send this string in "Server" header
version = not yours
; send this string in "Date" header
datetime = local
; timeout (seconds) to wait incoming internet connections
timeout = 0.3
; listen local connections through socket
sock = /tmp/sfserver.sock
; timeout (seconds) to wait until we can receive data through local socket
wait = 0.01

[ssl]
; http over ssl (https)
enable = 1
; server private key file (passphrase ACf7BKYN2lHnl for server.key.org)
pkey_file = /home/stranger/development/my-projects/python/sfserver/ssl/ca.key
; server certificate file
cert_file = /home/stranger/development/my-projects/python/sfserver/ssl/ca.crt
; use and check clients certificate
verify_client = 0
; if client must have certificate signed by server (use server certificate file)
verify_loc = /home/stranger/development/my-projects/python/sfserver/ssl/ca.crt

[http_codes]
default = 500
200 = Ok
404 = Not found
500 = Internal Server Error

[get]
base_dir = /home/stranger/development/my-projects/hack/exploits
aliases_file = aliases.cfg
; check file in that order
order = alias,fs
; content-type header which always will be sent
ctype = text/plain

[put]
; save received files
base_dir = /home/stranger/development/my-projects/python/sfserver/received
; directories create mode (default is 0700/-rwx------)
dirs_mode = 0700
; files create mode (default is 0600/-rw-------)
files_mode = 0600
; p - plain/binary data, b - base64 encoded data
files_enc_default = p
; max file name length
fname_max_len = 100
